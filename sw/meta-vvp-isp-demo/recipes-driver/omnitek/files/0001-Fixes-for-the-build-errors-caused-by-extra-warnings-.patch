diff --git a/drivers/capability/VideoFDMA/linux/cap_videofdma.c b/drivers/capability/VideoFDMA/linux/cap_videofdma.c
index d9d53e5..6865d38 100644
--- a/drivers/capability/VideoFDMA/linux/cap_videofdma.c
+++ b/drivers/capability/VideoFDMA/linux/cap_videofdma.c
@@ -1510,7 +1510,9 @@ void OT_Cap_VideoFDMA_DPC( struct work_struct *work )
         mutex_unlock( &fdoData->RequestMutex );
     }
 
+#ifdef OT_GPUDIRECT
 dpc_cleanup:
+#endif
     kfree( work );
 }
 
diff --git a/drivers/host_controller/LocalFPGA/linux/hc_localfpga.c b/drivers/host_controller/LocalFPGA/linux/hc_localfpga.c
index 97ad65e..0049a70 100644
--- a/drivers/host_controller/LocalFPGA/linux/hc_localfpga.c
+++ b/drivers/host_controller/LocalFPGA/linux/hc_localfpga.c
@@ -463,7 +463,9 @@ int OT_HC_LocalFPGA_probe( struct platform_device *pdev )
     int status = 0;
     DriverInstanceData *did = NULL;
     void * remapped_location = NULL;
+#ifdef PLG    
     uint32_t rdata;
+#endif    
     struct resource registerLocation;
 
     char nameBuf[MAX_FILEPATH_LEN];
@@ -482,7 +484,8 @@ int OT_HC_LocalFPGA_probe( struct platform_device *pdev )
         return status;
     }
 
-    KernelTrace( TRACE_LEVEL_INFORMATION, HC_LocalFPGA, "Address: 0x%08x, Byte Len: 0x%08x\n", registerLocation.start, ( registerLocation.end - registerLocation.start ) + 1 );
+    KernelTrace( TRACE_LEVEL_INFORMATION, HC_LocalFPGA, "%pR\n", &registerLocation);
+
     if ( ( registerLocation.start == 0 ) || ( registerLocation.end == 0 ) || ( registerLocation.end <= registerLocation.start ) )
         return -1;
 
diff --git a/drivers/host_controller/OmniTek/linux/platformPciConfigCommon.c b/drivers/host_controller/OmniTek/linux/platformPciConfigCommon.c
index 5bb5fb5..84efb4f 100644
--- a/drivers/host_controller/OmniTek/linux/platformPciConfigCommon.c
+++ b/drivers/host_controller/OmniTek/linux/platformPciConfigCommon.c
@@ -25,7 +25,13 @@ uint32_t MANUF_FUNC(_PlatformReadPciConfig)(DriverInstanceData *pDeviceInstance,
 			if( pci_read_config_dword(pDeviceInstance->pdev, Offset, &localDWord ) != 0 )
 				break;
 
-			copy_to_user( pDst, &localDWord, sizeof(localDWord ) );
+			if( copy_to_user( pDst, &localDWord, sizeof(localDWord ) ) != 0 )
+			{
+				bytesRead = 0;
+				ReadSize = 0;
+				break;
+			}
+
 			Offset += sizeof(uint32_t);
 			ReadSize -= sizeof(uint32_t);
 			bytesRead += sizeof(uint32_t);
@@ -39,7 +45,13 @@ uint32_t MANUF_FUNC(_PlatformReadPciConfig)(DriverInstanceData *pDeviceInstance,
 			uint8_t localByte;
 			if( pci_read_config_byte(pDeviceInstance->pdev, Offset, &localByte) != 0 )
 				break;
-			copy_to_user( pDstByte, &localByte, sizeof(localByte ) );
+
+			if( copy_to_user( pDstByte, &localByte, sizeof(localByte ) ) != 0 )
+			{
+				bytesRead = 0;
+				break;
+			}
+
 			ReadSize -= sizeof(uint8_t);
 			Offset += sizeof(uint8_t);
 			bytesRead += sizeof(uint8_t);

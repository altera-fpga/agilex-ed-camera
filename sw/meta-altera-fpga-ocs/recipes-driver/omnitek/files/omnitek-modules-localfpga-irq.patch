diff -r -u a/host_controller/LocalFPGA/linux/hc_localfpga.c b/host_controller/LocalFPGA/linux/hc_localfpga.c
--- a/host_controller/LocalFPGA/linux/hc_localfpga.c
+++ b/host_controller/LocalFPGA/linux/hc_localfpga.c
@@ -37,6 +37,9 @@
 #define FromDevToDID( dev ) container_of( dev, DriverInstanceData, pdev );
 #define FromHCToDID( hstc ) container_of( hstc, DriverInstanceData, hc );
 
+#define GIC_DT_OFFSET (32)
+#define GIC_PHANDLE_IRQ_NUM_IDX (1)
+
 // Set base debug level for this driver
 int OT_DebugLevel = TRACE_LEVEL_WARNING;
 
@@ -373,20 +376,46 @@
 
 void OT_HC_LocalFPGA_EnableInterrupts( POmniTekHostController context )
 {
-    unsigned int hw_irq;
+    unsigned int hw_irq, dt_hw_irq;
     int i;
     unsigned long flags;
     int status;
     DriverInstanceData *did = container_of( context, DriverInstanceData, hc );
     spin_lock_irqsave( &(did->IrqLock), flags );
 
+    // Note: LocalFPGA only used for ARM SoC FPGAs, OK to rely on specifics of ARM arch / DT
+
     for ( i = 0; i < did->NumInterrupts; i++)
     {
+        struct of_phandle_args out_irq;
+        uint32_t of_irq_idx = 0;
+        uint32_t nr = 0;
+        bool found_irq = false;
         hw_irq = did->Interrupts[i].Info->Id;
-        if ( did->InterruptDomain == NULL )
-            did->Interrupts[i].IRQ = hw_irq;
+        dt_hw_irq = hw_irq - GIC_DT_OFFSET;
+        
+        while ( status == 0 )
+        {
+            KernelTrace( TRACE_LEVEL_VERBOSE, HC_LocalFPGA, "Looking for hw_irq %u\n", hw_irq );
+            status = of_irq_parse_one( did->pdev->dev.of_node, nr, &out_irq );
+            if ( (status == 0) && (out_irq.args[GIC_PHANDLE_IRQ_NUM_IDX] == dt_hw_irq) )
+            {
+                KernelTrace( TRACE_LEVEL_VERBOSE, HC_LocalFPGA, "hw_irq %u (DT value of %u) found at DT IRQ index %u\n", hw_irq, dt_hw_irq, nr );
+                of_irq_idx = nr;
+                found_irq = true;
+                break;
+            }
+            nr++;
+        }
+
+        if ( !found_irq )
+        {
+            KernelTrace( TRACE_LEVEL_ERROR, HC_LocalFPGA, "Failed to find hw_irq %u (DT value of %u) in DT\n", hw_irq, dt_hw_irq );
+        }
         else
-            did->Interrupts[i].IRQ = irq_find_mapping( did->InterruptDomain, hw_irq );
+        {
+            did->Interrupts[i].IRQ = of_irq_get( did->pdev->dev.of_node, of_irq_idx );
+        }
 
         if ( did->Interrupts[i].IRQ == 0 )
         {
@@ -436,7 +465,6 @@
     void * remapped_location = NULL;
     uint32_t rdata;
     struct resource registerLocation;
-    struct device_node * interrupt_parent = NULL;
 
     char nameBuf[MAX_FILEPATH_LEN];
 
@@ -458,13 +486,6 @@
     if ( ( registerLocation.start == 0 ) || ( registerLocation.end == 0 ) || ( registerLocation.end <= registerLocation.start ) )
         return -1;
 
-    interrupt_parent = of_irq_find_parent( pdev->dev.of_node );
-    if( interrupt_parent == NULL )
-    {
-        KernelTraceNA( TRACE_LEVEL_ERROR, HC_LocalFPGA, "Failed to get interrupt parent\n" );
-        return status;
-    }
-
     status = dma_set_coherent_mask( &pdev->dev, DMA_BIT_MASK( 64 ) );
     if( status )
     {
@@ -506,14 +527,6 @@
         goto probe_err;
     }
 
-    did->InterruptDomain = irq_find_host( interrupt_parent );
-    // Apparently it will become this soon...
-    //interrupt_domain = irq_domain_lookup( interrupt_parent );
-    if( did->InterruptDomain == NULL )
-    {
-        KernelTraceNA( TRACE_LEVEL_WARNING, HC_LocalFPGA, "Failed to get interrupt domain, interrupts may not work\n" );
-    }
-
     status = device_create_file( &pdev->dev, &dev_attr_debuglevel );
     if( status )
     {
diff -r -u a/host_controller/LocalFPGA/linux/hc_localfpga.h b/host_controller/LocalFPGA/linux/hc_localfpga.h
--- a/host_controller/LocalFPGA/linux/hc_localfpga.h
+++ b/host_controller/LocalFPGA/linux/hc_localfpga.h
@@ -53,8 +53,6 @@
     spinlock_t IrqLock; /*!< SpinLock used to disable interrupts (on current processor) */
 //    u32 nInterruptStatus; /*!< Interrupt status for this device */
 //    u32 nDmaStatus; /*!< Channels that are flagging an interrupt */
-
-    struct irq_domain * InterruptDomain;
 } DriverInstanceData;
 
 // {94E7DE60-71AB-431e-9F11-83CDE32CD6EE}

###################################################################################
# Copyright (C) 2025 Altera Corporation
#
# This software and the related documents are Altera copyrighted materials, and
# your use of them is governed by the express license under which they were
# provided to you ("License"). Unless the License provides otherwise, you may
# not use, modify, copy, publish, distribute, disclose or transmit this software
# or the related documents without Altera's prior written permission.
#
# This software and the related documents are provided as is, with no express
# or implied warranties, other than those that are expressly stated in the License.
###################################################################################

# *********************************************************************
# Description
#
# Timing constraints for the MIPI and Camera Input
#
# *********************************************************************

# *********************************************************************
# Create Clocks
# *********************************************************************
create_clock -name {cam_i2c_clk} -period "400Khz" [get_ports {cam_i2c_scl}]
create_clock -name {max10_i2c_clk} -period "400Khz" [get_ports {max10_i2c_scl}]

# *********************************************************************
# I2C for Camera and Max10 on Devkit
# *********************************************************************
set_input_delay -clock [get_clocks cam_i2c_clk] 100 [get_ports cam_i2c_sda]
set_output_delay -clock [get_clocks cam_i2c_clk] 100 [get_ports cam_i2c_sda]
set_output_delay -clock [get_clocks cam_i2c_clk] 100 [get_ports cam_i2c_scl]

set_false_path -from [get_clocks {u0|clock_subsystem|iopll_0|iopll_0_refclk}] -to [get_clocks {cam_i2c_clk}]
set_false_path -from [get_clocks {cam_i2c_clk}] -to [get_clocks {u0|clock_subsystem|iopll_0|iopll_0_refclk}]
set_false_path -from [get_clocks {cam_i2c_clk}] -to [get_clocks {l4_sp_clk_src}]

# Added to deal with HPS I2C clocking Issue
set_false_path -to [get_registers {cam_i2c_scl_oe_reg*[0]}]
set_false_path -to [get_registers {cam_i2c_sda_oe_reg*[0]}]

set_input_delay -clock [get_clocks max10_i2c_clk] 100.000 [get_ports max10_i2c_sda]
set_output_delay -clock [get_clocks max10_i2c_clk] 100 [get_ports max10_i2c_sda]
set_output_delay -clock [get_clocks max10_i2c_clk] 100 [get_ports max10_i2c_scl]

set_false_path -from [get_clocks {u0|clock_subsystem|iopll_0|iopll_0_refclk}] -to [get_clocks {max10_i2c_clk}]
set_false_path -from [get_clocks {max10_i2c_clk}] -to [get_clocks {u0|clock_subsystem|iopll_0|iopll_0_refclk}]
set_false_path -from [get_clocks {max10_i2c_clk}] -to [get_clocks {l4_sp_clk_src}]

# Added to deal with HPS I2C clocking Issue
set_false_path -to [get_registers {max10_i2c_scl_oe_reg*[0]}]
set_false_path -to [get_registers {max10_i2c_sda_oe_reg*[0]}]


# *********************************************************************
# Camera IO
# *********************************************************************
set_false_path -from [get_ports cam_mipi0_fstrobe]
set_false_path -from [get_ports cam_mipi1_fstrobe]
set_false_path -from [get_ports cam_mipi_xvs]
set_false_path -from [get_ports cam_mipi_xhs]
set_false_path -from [get_ports cam_xtrig_xvs]


# *********************************************************************
# DPHY and MIPI Rx
# *********************************************************************
set_false_path -from [get_keepers -no_duplicates {*|rst_controller*|alt_rst_sync_uq1|altera_reset_synchronizer_int_chain_out}] -to [get_keepers -no_duplicates {u0|mipi_in_subsystem|mipi_in_mipi_dphy|*}]

# CSI dcfifo
# For paths crossing from the write into the read domain, apply a false path assignment between the delayed_wrptr_g and rs_dgwp registers:
set_false_path -from [get_registers {*dcfifo*delayed_wrptr_g[*]}] -to [get_registers {*dcfifo*rs_dgwp*}]

# For paths crossing from the read into the write domain, apply a false path assignment between the rdptr_g and ws_dgrp registers:
set_false_path -from [get_registers {*dcfifo*rdptr_g[*]}] -to [get_registers {*dcfifo*ws_dgrp*}]
